#!/bin/bash 

. /etc/pineauto/scripts.conf

printf "=========================================================================\n"
printf "                             Add Website\n"
printf "=========================================================================\n"
echo -n "Input domain name for new website [ENTER]: " 
read website
if [ "$website" = "" ]; then
echo "Wrong input,please try again"
exit
fi

if [ -f /etc/nginx/conf.d/$website.conf ]; then
echo "Website $website is existing..."
echo "Goodbye...!"
exit
fi
    mkdir -p "/www/$website/public_html"
    mkdir -p "/www/$website/logs"
    
    website_redirect="www.$website"
    if [[ $website == *www* ]]; then
	    website_redirect=${website/www./''}
    fi

    cat > "/etc/nginx/conf.d/$website.conf" <<END
server {
	server_name $website_redirect;
	rewrite ^(.*) http://$website\$1 permanent;
    	}
server {
	listen   80;

    	#access_log off;
    	#error_log off;
    	access_log /www/$website/logs/access.log;
		error_log /www/$website/logs/error.log;
    	root /www/$website/public_html;
		index index.php index.html index.htm;
    	server_name $website;
 
    	location / {
		try_files \$uri \$uri/ /index.php?\$args;
	}
 
    	location ~ \.php$ {
		fastcgi_split_path_info ^(.+\.php)(/.+)$;
        	include /etc/nginx/fastcgi_params;
        	fastcgi_pass 127.0.0.1:9000;
			#fastcgi_pass   unix:/var/run/php-fpm.sock;
        	fastcgi_index index.php;
		fastcgi_connect_timeout 60;
		fastcgi_send_timeout 180;
		fastcgi_read_timeout 180;
		fastcgi_buffer_size 256k;
		fastcgi_buffers 4 256k;
		fastcgi_busy_buffers_size 256k;
		fastcgi_temp_file_write_size 256k;
		fastcgi_intercept_errors on;
        	fastcgi_param SCRIPT_FILENAME /www/$website/public_html\$fastcgi_script_name;
    	}
	location ~ /\. {
		deny all;
	}
	location = /favicon.ico {
		log_not_found off;
		access_log off;
	}
	location = /robots.txt {
		allow all;
		log_not_found off;
		access_log off;
	}
	location ~* \.(3gp|gif|jpg|jpeg|png|ico|wmv|avi|asf|asx|mpg|mpeg|mp4|pls|mp3|mid|wav|swf|flv|exe|zip|tar|rar|gz|tgz|bz2|uha|7z|doc|docx|xls|xlsx|pdf|iso|eot|svg|ttf|woff)$ {
		gzip_static off;
		add_header Pragma public;
		add_header Cache-Control "public, must-revalidate, proxy-revalidate";
		access_log off;
		expires 30d;
		break;
        }

        location ~* \.(txt|js|css)$ {
	        add_header Pragma public;
		add_header Cache-Control "public, must-revalidate, proxy-revalidate";
		access_log off;
		expires 30d;
		break;
        }
	
        error_page 403 /403.html;
        location = /403.html {
                root /usr/share/nginx/html;
                allow all;
        }
	
        error_page 404 /404.html;
        location = /404.html {
                root /usr/share/nginx/html;
                allow all;
        }
		location /nginx_status {
			stub_status on;    # activate stub_status module
			access_log off;    
			allow 127.0.0.1;   # restrict access to local only
			deny all;
		}
    }
END

systemctl restart nginx.service

echo "$website is added"
echo "Upload code to /www/$website/public_html/"
echo "View logs at /www/$website/logs"